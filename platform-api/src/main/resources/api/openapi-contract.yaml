openapi: 3.0.0

info:
  description: "This is description of Platform API"
  version: "1.0.0"
  title: "Platform service API"

servers:
  - url: http://localhost:8080/{basePath}/
    variables:
      basePath:
        default: platform/api/v1

tags:
  - name: "Category"
  - name: "SiteConfig"

paths:
  /category/roots:
    get:
      summary: Return list of root categories
      tags:
        - "Category"
      description: Return the list of all root categories
      operationId: getRootsCategories
      parameters:
        - in: header
          name: Locale-code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request is proceded successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDto'


  /category/{categoryId}:
    get:
      summary: Retriving category by id
      operationId: getById
      tags:
        - "Category"
      parameters:
        - name: "categoryId"
          in: "path"
          description: "Category id"
          required: true
          schema:
            type: integer
        - in: header
          name: Locale-code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request is proceded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
        "403":
          description: The category by id was not found.

  /siteconfig/city/all:
    get:
      summary: List of cities in country
      operationId: getAllCitiesInCountry
      tags:
        - "SiteConfig"
      parameters:
        - name: "countryIsoCode"
          in: "query"
          description: "Iso-code of country"
          required: true
          schema:
            type: string
        - in: header
          name: Locale-code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request is proceded successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityDto'
        "403":
          description: The country was not found.

  /siteconfig/language/all:
    get:
      summary: List of languages which avaialble in a country
      operationId: getAllLanguagesInCountry
      tags:
        - "SiteConfig"
      parameters:
        - name: "countryIsoCode"
          in: "query"
          description: "Iso-code of country"
          required: true
          schema:
            type: string
        - in: header
          name: Locale-code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request is proceded successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageDto'

        "403":
          description: The country was not found.

  /siteconfig/locale:
    get:
      summary: The locale for region and language. If a language are not exist then return default locale for region.
      operationId: getLocaleByRegionAndLanguage
      tags:
        - "SiteConfig"
      parameters:
        - name: "regionCode"
          in: "query"
          description: "The code of region"
          required: true
          schema:
            type: string
        - name: "languageIsoCode"
          in: "query"
          description: "The iso-code of language"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Request is proceded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleDto'

        "403":
          description: The locale was not found.

components:
  schemas:
    CategoryDto:
      description: Category tree
      type: object
      required:
        - id
        - title
      properties:
        id:
          description: unique identifier of category id
          type: integer
        title:
          description: the name of category
          type: string
        parent:
          description: unique identifier of parent category id
          type: integer
        children:
          description: the list of children category
          type: array
          items:
            $ref: integer
    CityDto:
      description: The DTO object of a city
      type: object
      required:
        - title
      properties:
        title:
          description: the title of a language
          type: string

    LanguageDto:
      description: The DTO object of a language
      type: object
      required:
        - isoCode
        - title
      properties:
        isoCode:
          description: the iso-code of a language
          type: string
        title:
          description: the title of a language
          type: string

    LocaleDto:
      description: The DTO object of a locale
      type: object
      required:
        - code
        - timeZoneId
        - languageIsoCode
        - ccy

      properties:
        code:
          description: the code of a locale
          type: string
        timeZoneId:
          description: the time-zone of locale
          type: string
        languageIsoCode:
          description: the iso-code of language
          type: string
        ccy:
          description: the currency code
          type: string